/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package view;

import controller.ControllerFornecedor;
import controller.ControllerProdutos;
import controller.ControllerUnidadeMedia;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import model.ModelFornecedor;
import model.ModelProdutos;
import model.ModelUnidadeMedia;
import util.BLMascaras;

/**
 * @author  BLSoft
 * www.Blsoft.com.br
 * Venda de software e código fonte
 */
public class ViewProduto extends javax.swing.JFrame {

    ModelProdutos modelProdutos = new ModelProdutos();
    ControllerProdutos controllerProdutos = new ControllerProdutos();
    ControllerFornecedor controllerFornecedor = new ControllerFornecedor();
    ControllerUnidadeMedia controllerUnidadeMedia = new ControllerUnidadeMedia();
    ModelUnidadeMedia modelUnidadeMedia = new ModelUnidadeMedia();
    ArrayList<ModelUnidadeMedia> listaModelUnidadeMedias = new ArrayList<>();
    ArrayList<ModelProdutos> listamModelProdutos = new ArrayList<ModelProdutos>();
    ArrayList<ModelFornecedor> listaFornecedor = new ArrayList<ModelFornecedor>();
    String tipoCadastro;
    
    /**
     * Creates new form ViewProduto
     */
    public ViewProduto() {
        initComponents();
        setLocationRelativeTo(null);
        this.carregarProdutos();
        this.listarFornecedor();
        this.listarUnidadeMedidas();
        this.desabilitarCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btPesquisaProduto = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btNovo = new javax.swing.JButton();
        btAlterar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbProdutos = new javax.swing.JTable();
        jbSalvar = new javax.swing.JButton();
        tfCodigo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tfValor = new javax.swing.JFormattedTextField();
        tfEstoque = new javax.swing.JFormattedTextField();
        jtfNome = new javax.swing.JTextField();
        tfPesquisaProduto = new javax.swing.JTextField();
        cbFornecedores = new componentes.UJComboBox();
        cbUnidadeMedida = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        tfCodigoBarras = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Produtos");
        setAlwaysOnTop(true);
        setMaximumSize(null);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btPesquisaProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/Search.png"))); // NOI18N
        btPesquisaProduto.setText("Pesquisar");
        btPesquisaProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisaProdutoActionPerformed(evt);
            }
        });
        jPanel1.add(btPesquisaProduto, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 130, -1, -1));

        jLabel1.setText("Nome:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(98, 10, -1, -1));

        jLabel2.setText("Valor:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 10, -1, -1));

        jLabel3.setText("Fornecedor:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 140, -1));

        jLabel4.setText("Quant. Estoque:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 10, -1, -1));

        btNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/Add.png"))); // NOI18N
        btNovo.setText("Novo");
        btNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovoActionPerformed(evt);
            }
        });
        jPanel1.add(btNovo, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 410, -1, -1));

        btAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/Modify.png"))); // NOI18N
        btAlterar.setText("Alterar");
        btAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAlterarActionPerformed(evt);
            }
        });
        jPanel1.add(btAlterar, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 410, -1, -1));

        btExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/Delete.png"))); // NOI18N
        btExcluir.setText("Excluir");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });
        jPanel1.add(btExcluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 410, -1, -1));

        btCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/No.png"))); // NOI18N
        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(btCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, -1, -1));

        tbProdutos.setAutoCreateRowSorter(true);
        tbProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Nome", "Valor", "Quant.", "Unid.", "Fornecedor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbProdutos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tbProdutos.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tbProdutos);
        if (tbProdutos.getColumnModel().getColumnCount() > 0) {
            tbProdutos.getColumnModel().getColumn(0).setMinWidth(60);
            tbProdutos.getColumnModel().getColumn(0).setPreferredWidth(60);
            tbProdutos.getColumnModel().getColumn(0).setMaxWidth(60);
            tbProdutos.getColumnModel().getColumn(1).setPreferredWidth(250);
            tbProdutos.getColumnModel().getColumn(3).setMinWidth(60);
            tbProdutos.getColumnModel().getColumn(3).setPreferredWidth(60);
            tbProdutos.getColumnModel().getColumn(3).setMaxWidth(60);
            tbProdutos.getColumnModel().getColumn(4).setMinWidth(60);
            tbProdutos.getColumnModel().getColumn(4).setPreferredWidth(60);
            tbProdutos.getColumnModel().getColumn(4).setMaxWidth(60);
        }

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 580, 230));

        jbSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/Save.png"))); // NOI18N
        jbSalvar.setText("Salvar");
        jbSalvar.setEnabled(false);
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });
        jPanel1.add(jbSalvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 410, -1, -1));

        tfCodigo.setEditable(false);
        tfCodigo.setEnabled(false);
        jPanel1.add(tfCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 82, -1));

        jLabel5.setText("Código:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        tfValor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfValorFocusLost(evt);
            }
        });
        jPanel1.add(tfValor, new org.netbeans.lib.awtextra.AbsoluteConstraints(363, 31, 111, -1));

        tfEstoque.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfEstoqueFocusLost(evt);
            }
        });
        jPanel1.add(tfEstoque, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 30, 110, -1));
        jPanel1.add(jtfNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(98, 31, 259, -1));
        jPanel1.add(tfPesquisaProduto, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 130, 250, -1));
        jPanel1.add(cbFornecedores, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, 480, -1));

        jPanel1.add(cbUnidadeMedida, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 80, -1));

        jLabel7.setText("Unid. Med.");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));
        jPanel1.add(tfCodigoBarras, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 200, -1));

        jLabel6.setText("Código de barras:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, -1));

        jLabel8.setText("Pesquisar:");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 110, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 450));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btPesquisaProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisaProdutoActionPerformed
//filtrar dados na tabela
        DefaultTableModel tabela = (DefaultTableModel) this.tbProdutos.getModel();
        final TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(tabela);
        this.tbProdutos.setRowSorter(sorter);
        String text = tfPesquisaProduto.getText();
        sorter.setRowFilter(RowFilter.regexFilter(text, 1));
    }//GEN-LAST:event_btPesquisaProdutoActionPerformed

    private void btNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovoActionPerformed
        novoProduto();
        jbSalvar.setEnabled(true);
        habilitarCampos();
        tipoCadastro = "novo";
    }//GEN-LAST:event_btNovoActionPerformed

    private void btAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlterarActionPerformed
        int linhaSelecionada = tbProdutos.getSelectedRow();
        // Verificamos se existe realmente alguma linha selecionada
        if (linhaSelecionada < 0){
            JOptionPane.showMessageDialog(this, "Você deve selecionar um item na tabela antes de clicar no botão!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
        } else {
            novoProduto();
            jbSalvar.setEnabled(true);
            habilitarCampos();
            recuperarProduto();
            tipoCadastro = "alteracao";
        }
    }//GEN-LAST:event_btAlterarActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        //excluir produto
        int linhaSelecionada = tbProdutos.getSelectedRow();
        // Verificamos se existe realmente alguma linha selecionada
        if (linhaSelecionada < 0) {
            JOptionPane.showMessageDialog(this, "Você deve selecionar um item na tabela antes de clicar no botão!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
        }else {
            this.excluirProduto();
        }
    }//GEN-LAST:event_btExcluirActionPerformed

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        this.desabilitarCampos();
        jbSalvar.setEnabled(false);
    }//GEN-LAST:event_btCancelarActionPerformed

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed
        if (tipoCadastro.equals("novo")){
            salvarProduto();
            jbSalvar.setEnabled(false);
        } else if(tipoCadastro.equals("alteracao")){
            alterarProduto();
            jbSalvar.setEnabled(false);
        }
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void tfValorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfValorFocusLost
        // TODO add your handling code here:
        this.tfValor.setText(new BLMascaras().converterVirgulaParaPonto(this.tfValor.getText()));
    }//GEN-LAST:event_tfValorFocusLost

    private void tfEstoqueFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfEstoqueFocusLost
        this.tfEstoque.setText(new BLMascaras().converterVirgulaParaPonto(this.tfEstoque.getText()));
    }//GEN-LAST:event_tfEstoqueFocusLost

    private void listarUnidadeMedidas(){
        listaModelUnidadeMedias = controllerUnidadeMedia.getListaUnidadeMediaController();
        cbUnidadeMedida.removeAllItems();
        for (int i = 0; i < listaModelUnidadeMedias.size(); i++){
            cbUnidadeMedida.addItem(listaModelUnidadeMedias.get(i).getAbreviacao());
        }
    }
    
    private void listarFornecedor(){
        listaFornecedor = controllerFornecedor.getListaFornecedorController();
        cbFornecedores.removeAllItems();
        for (int i = 0; i < listaFornecedor.size(); i++){
            cbFornecedores.addItem(listaFornecedor.get(i).getNome());
        }
    }
    
    private void excluirProduto(){
        int linha = tbProdutos.getSelectedRow();
        String nome = (String) tbProdutos.getValueAt(linha, 1);
        int codigo = (Integer) tbProdutos.getValueAt(linha, 0);
        //pegunta se realmente deseja excluir
        int opcao = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja"
                + " excluir o registro \nNome: "
                + nome + " ?", "Atenção", JOptionPane.YES_NO_OPTION);
        //se sim exclui, se não não faz nada    
        if (opcao == JOptionPane.OK_OPTION) {
            if (controllerProdutos.excluirProdutosController(codigo)) {
                JOptionPane.showMessageDialog(this, "Registro excluido com suscesso!");
                carregarProdutos();
            }else{
            JOptionPane.showMessageDialog(this, "Erro ao e os dados!", "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    
    private boolean recuperarProduto() {
        //recebe a linha selecionada
        int linha = this.tbProdutos.getSelectedRow();
        //pega o codigo do cliente na linha selecionada
        int codigo = (Integer) tbProdutos.getValueAt(linha, 0);
        try {
            //recupera os dados do banco
            modelProdutos = controllerProdutos.getProdutosController(codigo);
            //seta os dados na interface
            this.tfCodigo.setText(String.valueOf(modelProdutos.getCodigo()));
            this.jtfNome.setText(modelProdutos.getNome());
            this.tfValor.setText(modelProdutos.getValor().toString());
            this.tfEstoque.setText(String.valueOf(modelProdutos.getEstoque()));
            this.cbFornecedores.setSelectedItem(controllerFornecedor.getFornecedorController(modelProdutos.getFornecedoresCodigo()).getNome());
            this.tfCodigoBarras.setText(modelProdutos.getCodigoBarras());
            this.cbUnidadeMedida.setSelectedItem(controllerUnidadeMedia.getUnidadeMediaController(modelProdutos.getUnidadeMedida()).getAbreviacao());
            return true;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Código inválido ou nenhum registro selecionado", "Aviso", JOptionPane.WARNING_MESSAGE);
            return false;
        }
    }
    
    private boolean alterarProduto(){
        modelProdutos.setCodigo(Integer.parseInt(this.tfCodigo.getText()));
        modelProdutos.setNome(this.jtfNome.getText());
        modelProdutos.setValor(Double.parseDouble(this.tfValor.getText()));
        modelProdutos.setFornecedoresCodigo(controllerFornecedor.getFornecedorController(this.cbFornecedores.getSelectedItem().toString()).getCodigo());
        modelProdutos.setEstoque(Float.parseFloat(this.tfEstoque.getText()));
        modelProdutos.setCodigoBarras(this.tfCodigoBarras.getText());
        modelProdutos.setUnidadeMedida(controllerUnidadeMedia.getUnidadeMediaController(this.cbUnidadeMedida.getSelectedItem().toString()).getCodigo());
        //salvar 
        if (controllerProdutos.atualizarProdutosController(modelProdutos)) {
            JOptionPane.showMessageDialog(this, "Registro alterado com sucesso!");
            this.desabilitarCampos();
            this.carregarProdutos();
            limparDados();
            return true;
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao alterar os dados!", "ERRO", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }
    
     private void carregarProdutos() {
        listamModelProdutos = controllerProdutos.getListaProdutosController();
        DefaultTableModel modelo = (DefaultTableModel) tbProdutos.getModel();
        modelo.setNumRows(0);
        String unidadeMedida = "";
        String fornecedor = "";
        //CARREGA OS DADOS DA LISTA NA TABELA
        int cont = listamModelProdutos.size();
        for (int i = 0; i < cont; i++) {
            unidadeMedida = controllerUnidadeMedia.getUnidadeMediaController(listamModelProdutos.get(i).getUnidadeMedida()).getAbreviacao();
            fornecedor = controllerFornecedor.getFornecedorController(listamModelProdutos.get(i).getFornecedoresCodigo()).getNome();
            modelo.addRow(new Object[]{
                listamModelProdutos.get(i).getCodigo(),
                listamModelProdutos.get(i).getNome(),
                listamModelProdutos.get(i).getValor(),
                listamModelProdutos.get(i).getEstoque(),
                unidadeMedida,
                fornecedor
            });
        }
    }
     
     private void limparDados(){
        jtfNome.setText("");
        tfValor.setText("");
        tfEstoque.setText("");
        tfPesquisaProduto.setText("");
        ;
     }
    
    private void desabilitarCampos(){
        jtfNome.setEditable(false);
        tfValor.setEditable(false);
        tfEstoque.setEditable(false);
        tfCodigoBarras.setEditable(false);
        carregarProdutos();
    }
    
    private void novoProduto(){
        habilitarCampos();
        tfCodigo.setText("Novo");
        jtfNome.setText("");
        tfValor.setText("");
        tfEstoque.setText("");
        tfCodigoBarras.setText("");
       
        cbFornecedores.setSelectedItem("");
        tipoCadastro = "novo";
    }
    
    private void habilitarCampos(){
        jtfNome.setEditable(true);
        tfValor.setEditable(true);
        tfEstoque.setEditable(true);
        tfCodigoBarras.setEditable(true);
        cbFornecedores.setEditable(true);
    }
    
    private boolean salvarProduto(){
        modelProdutos.setNome(this.jtfNome.getText());
        modelProdutos.setValor(Double.parseDouble(this.tfValor.getText()));
        modelProdutos.setFornecedoresCodigo(controllerFornecedor.getFornecedorController(this.cbFornecedores.getSelectedItem().toString()).getCodigo());
        modelProdutos.setEstoque(Float.parseFloat(this.tfEstoque.getText()));
        modelProdutos.setCodigoBarras(this.tfCodigoBarras.getText());
        modelProdutos.setUnidadeMedida(controllerUnidadeMedia.getUnidadeMediaController(this.cbUnidadeMedida.getSelectedItem().toString()).getCodigo());
        //salvar 
        if (controllerProdutos.salvarProdutosController(modelProdutos)>0) {
            JOptionPane.showMessageDialog(this, "Registro gravado com sucesso!");
            this.desabilitarCampos();
            this.carregarProdutos();
            limparDados();
            return true;
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao gravar os dados!", "ERRO", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewProduto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAlterar;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btNovo;
    private javax.swing.JButton btPesquisaProduto;
    private componentes.UJComboBox cbFornecedores;
    private javax.swing.JComboBox cbUnidadeMedida;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JTextField jtfNome;
    private javax.swing.JTable tbProdutos;
    private javax.swing.JTextField tfCodigo;
    private javax.swing.JTextField tfCodigoBarras;
    private javax.swing.JFormattedTextField tfEstoque;
    private javax.swing.JTextField tfPesquisaProduto;
    private javax.swing.JFormattedTextField tfValor;
    // End of variables declaration//GEN-END:variables
}
