/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package view;

import controller.ControllerUnidadeMedia;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.ModelUnidadeMedia;

/**
 *
 * @author Administrador
 */
public class ViewUnidadeMedia extends javax.swing.JFrame {

    ControllerUnidadeMedia controllerUnidadeMedia = new ControllerUnidadeMedia();
    ModelUnidadeMedia modelUnidadeMedia = new ModelUnidadeMedia();
    ArrayList<ModelUnidadeMedia> listaModelUnidadeMedias = new ArrayList<>();
    String tipoCadastro;
    
    /**
     * Creates new form ViewUnidadeMedia
     */
    public ViewUnidadeMedia() {
        initComponents();
        this.desabilitarCampos();
        carregarUnidadesMedidas();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tfCodigo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        tfAbreviacao = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tfDescricao = new javax.swing.JTextField();
        btCancelar = new javax.swing.JButton();
        btNovo = new javax.swing.JButton();
        btSalvar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbUnidadeMedida = new javax.swing.JTable();
        btExcluir = new javax.swing.JButton();
        btAlterar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Unidade de Medida");

        tfCodigo.setEditable(false);

        jLabel1.setText("Código");

        jLabel2.setText("Abreviação");

        jLabel3.setText("Descrição");

        btCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/No.png"))); // NOI18N
        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        btNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/Add.png"))); // NOI18N
        btNovo.setText("Novo");
        btNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovoActionPerformed(evt);
            }
        });

        btSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/Save.png"))); // NOI18N
        btSalvar.setText("Salvar");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        tbUnidadeMedida.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Abreviação", "Descrição"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbUnidadeMedida);
        if (tbUnidadeMedida.getColumnModel().getColumnCount() > 0) {
            tbUnidadeMedida.getColumnModel().getColumn(0).setMinWidth(80);
            tbUnidadeMedida.getColumnModel().getColumn(0).setPreferredWidth(80);
            tbUnidadeMedida.getColumnModel().getColumn(0).setMaxWidth(80);
            tbUnidadeMedida.getColumnModel().getColumn(1).setMinWidth(80);
            tbUnidadeMedida.getColumnModel().getColumn(1).setPreferredWidth(80);
            tbUnidadeMedida.getColumnModel().getColumn(1).setMaxWidth(80);
        }

        btExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/Delete.png"))); // NOI18N
        btExcluir.setText("Excluir");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        btAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/Modify.png"))); // NOI18N
        btAlterar.setText("Alterar");
        btAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAlterarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(87, 87, 87)
                        .addComponent(jLabel2))
                    .addComponent(jLabel3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btCancelar)
                            .addGap(5, 5, 5)
                            .addComponent(btExcluir)
                            .addGap(7, 7, 7)
                            .addComponent(btAlterar)
                            .addGap(5, 5, 5)
                            .addComponent(btNovo)
                            .addGap(59, 59, 59)
                            .addComponent(btSalvar))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(tfAbreviacao))
                            .addComponent(tfDescricao, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel1))
                    .addComponent(jLabel2))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(tfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tfAbreviacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jLabel3)
                .addGap(6, 6, 6)
                .addComponent(tfDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btCancelar)
                    .addComponent(btExcluir)
                    .addComponent(btAlterar)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btNovo)
                        .addComponent(btSalvar)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        // TODO add your handling code here:
        this.desabilitarCampos();
    }//GEN-LAST:event_btCancelarActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        int linhaSelecionada = tbUnidadeMedida.getSelectedRow();
        // Verificamos se existe realmente alguma linha selecionada
        if (linhaSelecionada < 0) {
            JOptionPane.showMessageDialog(this, "Você deve selecionar um item na tabela antes de clicar no botão!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
        } else {
            this.excluirUnidade();
        }
    }//GEN-LAST:event_btExcluirActionPerformed

    private void btAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlterarActionPerformed
        int linhaSelecionada = tbUnidadeMedida.getSelectedRow();
        // Verificamos se existe realmente alguma linha selecionada
        if (linhaSelecionada < 0) {
            JOptionPane.showMessageDialog(this, "Você deve selecionar um item na tabela antes de clicar no botão!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
        }else{
            novaUnidade();
            btSalvar.setEnabled(true);
            habilitarCampos();
            recuperarUnidade();
            tipoCadastro = "alteracao";
        }
    }//GEN-LAST:event_btAlterarActionPerformed

    private void btNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovoActionPerformed
        // TODO add your handling code here:
        this.novaUnidade();
        carregarUnidadesMedidas();
    }//GEN-LAST:event_btNovoActionPerformed

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        // TODO add your handling code here:
        if (tipoCadastro.equals("novo")) {
            salvarUnidade();
            btSalvar.setEnabled(false);
            carregarUnidadesMedidas();
        } else if (tipoCadastro.equals("alteracao")) {
            alterarUnidade();
            btSalvar.setEnabled(false);
            carregarUnidadesMedidas();
        }
    }//GEN-LAST:event_btSalvarActionPerformed

    private boolean salvarUnidade(){
        //setar os dados no model
        modelUnidadeMedia.setAbreviacao(this.tfAbreviacao.getText());
        modelUnidadeMedia.setDescricao(this.tfDescricao.getText());

        //salvar 
        if (controllerUnidadeMedia.salvarUnidadeMediaController(modelUnidadeMedia)>0) {
            JOptionPane.showMessageDialog(this, "Registro gravado com sucesso!");
            this.desabilitarCampos();
            this.carregarUnidadesMedidas();
            limparDados();
            return true;
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao gravar os dados!", "ERRO", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }
    
    private boolean alterarUnidade(){
        modelUnidadeMedia.setCodigo(Integer.parseInt(this.tfCodigo.getText()));
        modelUnidadeMedia.setAbreviacao(this.tfAbreviacao.getText());
        modelUnidadeMedia.setDescricao(this.tfDescricao.getText());
        //salvar 
        if (controllerUnidadeMedia.atualizarUnidadeMediaController(modelUnidadeMedia)) {
            JOptionPane.showMessageDialog(this, "Registro alterado com sucesso!");
            this.desabilitarCampos();
            this.carregarUnidadesMedidas();
            limparDados();
            return true;
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao alterar os dados!", "ERRO", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }
    
    //recuperar os dados para a interface
    private boolean recuperarUnidade() {
        //recebe a linha selecionada
        int linha = this.tbUnidadeMedida.getSelectedRow();
        //pega o codigo do cliente na linha selecionada
        int codigo = (Integer) tbUnidadeMedida.getValueAt(linha, 0);
        try {
            //recupera os dados do banco
            modelUnidadeMedia = controllerUnidadeMedia.getUnidadeMediaController(codigo);
            //seta os dados na interface
            this.tfCodigo.setText(String.valueOf(modelUnidadeMedia.getCodigo()));
            this.tfAbreviacao.setText(modelUnidadeMedia.getAbreviacao());
            this.tfDescricao.setText(modelUnidadeMedia.getDescricao());
            return true;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Código inválido ou nenhum registro selecionado", "Aviso", JOptionPane.WARNING_MESSAGE);
            return false;
        }
    }
    
    private void excluirUnidade(){
        int linha = tbUnidadeMedida.getSelectedRow();
        String nome = (String) tbUnidadeMedida.getValueAt(linha, 2);
        int codigo = (Integer) tbUnidadeMedida.getValueAt(linha, 0);
        //pegunta se realmente deseja excluir
        int opcao = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja"
                + " excluir o registro \nNome: "
                + nome + " ?", "Atenção", JOptionPane.YES_NO_OPTION);
        //se sim exclui, se não não faz nada    
        if (opcao == JOptionPane.OK_OPTION) {
            if (controllerUnidadeMedia.excluirUnidadeMediaController(codigo)) {
                JOptionPane.showMessageDialog(this, "Registro excluido com suscesso!");
                carregarUnidadesMedidas();
            }else{
            JOptionPane.showMessageDialog(this, "Erro ao e os dados!", "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    
    private void desabilitarCampos() {
        tfCodigo.setEnabled(false);
        tfAbreviacao.setEnabled(false);
        tfDescricao.setEnabled(false);
        btSalvar.setEnabled(false);
        carregarUnidadesMedidas();
    }
    
    private void limparDados() {
        tfCodigo.setText("");
        tfAbreviacao.setText("");
        tfDescricao.setText("");
    }
    
    private void habilitarCampos() {
        tfCodigo.setEnabled(true);
        tfAbreviacao.setEnabled(true);
        tfDescricao.setEnabled(true);
    }
    
    private void novaUnidade(){
        habilitarCampos();
        tfCodigo.setText("Novo");
        tfAbreviacao.setText("");
        tfDescricao.setText("");
        tipoCadastro = "novo";
        btSalvar.setEnabled(true);
    }
    
    
    /**
     * Carregar lista de unidade de medida na tabela
     */
    private void carregarUnidadesMedidas() {
        listaModelUnidadeMedias = controllerUnidadeMedia.getListaUnidadeMediaController();
        DefaultTableModel modelo = (DefaultTableModel) tbUnidadeMedida.getModel();
        modelo.setNumRows(0);
        //CARREGA OS DADOS DA LISTA NA TABELA
        int cont = listaModelUnidadeMedias.size();
        for (int i = 0; i < cont; i++) {
            modelo.addRow(new Object[]{
                listaModelUnidadeMedias.get(i).getCodigo(),
                listaModelUnidadeMedias.get(i).getAbreviacao(),
                listaModelUnidadeMedias.get(i).getDescricao()
            });
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewUnidadeMedia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewUnidadeMedia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewUnidadeMedia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewUnidadeMedia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewUnidadeMedia().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAlterar;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btNovo;
    private javax.swing.JButton btSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbUnidadeMedida;
    private javax.swing.JTextField tfAbreviacao;
    private javax.swing.JTextField tfCodigo;
    private javax.swing.JTextField tfDescricao;
    // End of variables declaration//GEN-END:variables
}
